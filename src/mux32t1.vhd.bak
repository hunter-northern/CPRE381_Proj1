library IEEE;
use IEEE.std_logic_1164.all;

entity mux32t1 is

  port(i_S  : in std_logic_vector (4 downto 0);
	i_R00 : in std_logic_vector(31 downto 0);
	i_R01 : in std_logic_vector(31 downto 0);
	i_R02 : in std_logic_vector(31 downto 0);
	i_R03 : in std_logic_vector(31 downto 0);
	i_R04 : in std_logic_vector(31 downto 0);
	i_R05 : in std_logic_vector(31 downto 0);
	i_R06 : in std_logic_vector(31 downto 0);
	i_R07 : in std_logic_vector(31 downto 0);
	i_R08 : in std_logic_vector(31 downto 0);
	i_R09 : in std_logic_vector(31 downto 0);
	i_R0A : in std_logic_vector(31 downto 0);
	i_R0B : in std_logic_vector(31 downto 0);
	i_R0C : in std_logic_vector(31 downto 0);
	i_R0D : in std_logic_vector(31 downto 0);
	i_R0E : in std_logic_vector(31 downto 0);
	i_R0F : in std_logic_vector(31 downto 0);
	i_R10 : in std_logic_vector(31 downto 0);
	i_R11 : in std_logic_vector(31 downto 0);
	i_R12 : in std_logic_vector(31 downto 0);
	i_R13 : in std_logic_vector(31 downto 0);
	i_R14 : in std_logic_vector(31 downto 0);
	i_R15 : in std_logic_vector(31 downto 0);
	i_R16 : in std_logic_vector(31 downto 0);
	i_R17 : in std_logic_vector(31 downto 0);
	i_R18 : in std_logic_vector(31 downto 0);
	i_R19 : in std_logic_vector(31 downto 0);
	i_R1A : in std_logic_vector(31 downto 0);
	i_R1B : in std_logic_vector(31 downto 0);
	i_R1C : in std_logic_vector(31 downto 0);
	i_R1D : in std_logic_vector(31 downto 0);
	i_R1E : in std_logic_vector(31 downto 0);
	i_R1F : in std_logic_vector(31 downto 0);
	o_Y : out std_logic_vector(31 downto 0));

end mux32t1;

architecture structure of mux32t1 is
begin

o_Y <=
i_R00 when i_S = "00000" else
i_R01 when i_S = "00001" else
i_R02 when i_S = "00010" else
i_R03 when i_S = "00011" else
i_R04 when i_S = "00100" else
i_R05 when i_S = "00101" else
i_R06 when i_S = "00110" else
i_R07 when i_S = "00111" else
i_R08 when i_S = "01000" else
i_R09 when i_S = "01001" else
i_R0A when i_S = "01010" else
i_R0B when i_S = "01011" else
i_R0C when i_S = "01100" else
i_R0D when i_S = "01101" else
i_R0E when i_S = "01110" else
i_R0F when i_S = "01111" else
i_R10 when i_S = "10000" else
i_R11 when i_S = "10001" else
i_R12 when i_S = "10010" else
i_R13 when i_S = "10011" else
i_R14 when i_S = "10100" else
i_R15 when i_S = "10101" else
i_R16 when i_S = "10110" else
i_R17 when i_S = "10111" else
i_R18 when i_S = "11000" else
i_R19 when i_S = "11001" else
i_R1A when i_S = "11010" else
i_R1B when i_S = "11011" else
i_R1C when i_S = "11100" else
i_R1D when i_S = "11101" else
i_R1E when i_S = "11110" else
i_R1F when i_S = "11111";
end structure;